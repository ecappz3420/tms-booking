"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/currencylist.js":
/*!*****************************!*\
  !*** ./app/currencylist.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ default auto */ const currencies = [\n    {\n        code: \"USD\",\n        symbol: \"$\",\n        country: \"United States\"\n    },\n    {\n        code: \"AED\",\n        symbol: \"د.إ\",\n        country: \"United Arab Emirates\"\n    },\n    {\n        code: \"AFN\",\n        symbol: \"؋\",\n        country: \"Afghanistan\"\n    },\n    {\n        code: \"ALL\",\n        symbol: \"L\",\n        country: \"Albania\"\n    },\n    {\n        code: \"AMD\",\n        symbol: \"֏\",\n        country: \"Armenia\"\n    },\n    {\n        code: \"ARS\",\n        symbol: \"$\",\n        country: \"Argentina\"\n    },\n    {\n        code: \"AUD\",\n        symbol: \"$\",\n        country: \"Australia\"\n    },\n    {\n        code: \"BAM\",\n        symbol: \"KM\",\n        country: \"Bosnia and Herzegovina\"\n    },\n    {\n        code: \"BBD\",\n        symbol: \"$\",\n        country: \"Barbados\"\n    },\n    {\n        code: \"BDT\",\n        symbol: \"৳\",\n        country: \"Bangladesh\"\n    },\n    {\n        code: \"BGN\",\n        symbol: \"лв\",\n        country: \"Bulgaria\"\n    },\n    {\n        code: \"BHD\",\n        symbol: \".د.ب\",\n        country: \"Bahrain\"\n    },\n    {\n        code: \"BMD\",\n        symbol: \"$\",\n        country: \"Bermuda\"\n    },\n    {\n        code: \"BRL\",\n        symbol: \"R$\",\n        country: \"Brazil\"\n    },\n    {\n        code: \"CAD\",\n        symbol: \"$\",\n        country: \"Canada\"\n    },\n    {\n        code: \"CHF\",\n        symbol: \"CHF\",\n        country: \"Switzerland\"\n    },\n    {\n        code: \"CNY\",\n        symbol: \"¥\",\n        country: \"China\"\n    },\n    {\n        code: \"COP\",\n        symbol: \"$\",\n        country: \"Colombia\"\n    },\n    {\n        code: \"CRC\",\n        symbol: \"₡\",\n        country: \"Costa Rica\"\n    },\n    {\n        code: \"CVE\",\n        symbol: \"$\",\n        country: \"Cape Verde\"\n    },\n    {\n        code: \"CZK\",\n        symbol: \"Kč\",\n        country: \"Czech Republic\"\n    },\n    {\n        code: \"DKK\",\n        symbol: \"kr\",\n        country: \"Denmark\"\n    },\n    {\n        code: \"DZD\",\n        symbol: \"دج\",\n        country: \"Algeria\"\n    },\n    {\n        code: \"EGP\",\n        symbol: \"£\",\n        country: \"Egypt\"\n    },\n    {\n        code: \"EUR\",\n        symbol: \"€\",\n        country: \"European Union\"\n    },\n    {\n        code: \"GBP\",\n        symbol: \"£\",\n        country: \"United Kingdom\"\n    },\n    {\n        code: \"GHS\",\n        symbol: \"₵\",\n        country: \"Ghana\"\n    },\n    {\n        code: \"HKD\",\n        symbol: \"$\",\n        country: \"Hong Kong\"\n    },\n    {\n        code: \"INR\",\n        symbol: \"₹\",\n        country: \"India\"\n    },\n    {\n        code: \"JPY\",\n        symbol: \"¥\",\n        country: \"Japan\"\n    },\n    {\n        code: \"KES\",\n        symbol: \"Sh\",\n        country: \"Kenya\"\n    },\n    {\n        code: \"KRW\",\n        symbol: \"₩\",\n        country: \"South Korea\"\n    },\n    {\n        code: \"MXN\",\n        symbol: \"$\",\n        country: \"Mexico\"\n    },\n    {\n        code: \"MYR\",\n        symbol: \"RM\",\n        country: \"Malaysia\"\n    },\n    {\n        code: \"NAD\",\n        symbol: \"$\",\n        country: \"Namibia\"\n    },\n    {\n        code: \"NGN\",\n        symbol: \"₦\",\n        country: \"Nigeria\"\n    },\n    {\n        code: \"NOK\",\n        symbol: \"kr\",\n        country: \"Norway\"\n    },\n    {\n        code: \"NZD\",\n        symbol: \"$\",\n        country: \"New Zealand\"\n    },\n    {\n        code: \"PAB\",\n        symbol: \"B/.\",\n        country: \"Panama\"\n    },\n    {\n        code: \"PHP\",\n        symbol: \"₱\",\n        country: \"Philippines\"\n    },\n    {\n        code: \"PKR\",\n        symbol: \"₨\",\n        country: \"Pakistan\"\n    },\n    {\n        code: \"PLN\",\n        symbol: \"zł\",\n        country: \"Poland\"\n    },\n    {\n        code: \"QAR\",\n        symbol: \"ر.ق\",\n        country: \"Qatar\"\n    },\n    {\n        code: \"RON\",\n        symbol: \"lei\",\n        country: \"Romania\"\n    },\n    {\n        code: \"RUB\",\n        symbol: \"₽\",\n        country: \"Russia\"\n    },\n    {\n        code: \"SAR\",\n        symbol: \"ر.س\",\n        country: \"Saudi Arabia\"\n    },\n    {\n        code: \"SEK\",\n        symbol: \"kr\",\n        country: \"Sweden\"\n    },\n    {\n        code: \"SGD\",\n        symbol: \"$\",\n        country: \"Singapore\"\n    },\n    {\n        code: \"THB\",\n        symbol: \"฿\",\n        country: \"Thailand\"\n    },\n    {\n        code: \"TRY\",\n        symbol: \"₺\",\n        country: \"Turkey\"\n    },\n    {\n        code: \"TWD\",\n        symbol: \"NT$\",\n        country: \"Taiwan\"\n    },\n    {\n        code: \"UAH\",\n        symbol: \"₴\",\n        country: \"Ukraine\"\n    },\n    {\n        code: \"VND\",\n        symbol: \"₫\",\n        country: \"Vietnam\"\n    },\n    {\n        code: \"ZAR\",\n        symbol: \"R\",\n        country: \"South Africa\"\n    },\n    {\n        code: \"ZMW\",\n        symbol: \"ZK\",\n        country: \"Zambia\"\n    }\n];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (currencies);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/currencylist.js\n"));

/***/ })

});